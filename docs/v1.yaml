openapi: 3.0.2
info:
  title: Api
  version: 1.0.0
  contact: {}
paths:
  /logs:
    get:
      operationId: getLogs
      summary: Retrieve latest server logs
      tags:
        - utils
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
      parameters: []
  /default:
    get:
      operationId: getDefault
      summary: get default route
      tags:
        - default
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
      parameters: []
    post:
      operationId: postDefault
      summary: post default route
      tags:
        - default
      security:
        - apiKey: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultPostModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
      parameters: []
    patch:
      operationId: patchDefault
      summary: path default route
      tags:
        - default
      security:
        - apiKey: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefaultPatchModel'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
      parameters: []
    delete:
      operationId: deleteDefault
      summary: delete default route
      tags:
        - default
      security:
        - apiKey: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorModel'
      parameters: []
components:
  schemas:
    ApiErrorModel:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    SuccessModel:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    MessageModel:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    Log:
      type: object
      description: Server log entry
      properties:
        message:
          description: Log message
          type: string
        time:
          description: Log timestamp in seconds
          type: number
        level:
          type: string
          enum:
            - debug
            - info
            - warn
            - error
      required:
        - message
        - time
        - level
    DefaultPostModel:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    DefaultPatchModel:
      type: object
      properties:
        name:
          type: string
      required:
        - name
  responses:
    '204':
      description: Successful operation
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
    '404':
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
    '503':
      description: Server is busy
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorModel'
  securitySchemes:
    apiKey:
      type: http
      scheme: bearer
  links: {}
  callbacks: {}
security: []
